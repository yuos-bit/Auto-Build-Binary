name: Build ZeroTierOne for MIPSLE

on:
  push:
    tags:
      - 'v*'  # 仅在推送标签时触发，如 v1.16.0
  workflow_dispatch:  # 允许手动触发

jobs:
  build-mipsle:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up cross-compilation environment
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gcc-mipsel-linux-gnu \
            g++-mipsel-linux-gnu \
            make \
            git \
            rustc \
            cargo \
            libssl-dev

          # 安装 MIPSLE 目标的 Rust 工具链
          rustup target add mipsel-unknown-linux-gnu

      - name: Prepare build variables
        id: vars
        run: |
          echo "ZT_VERSION=$(git describe --abbrev=0 --tags)" >> $GITHUB_OUTPUT
          echo "ZT_COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Cross-compile ZeroTierOne
        env:
          CC: mipsel-linux-gnu-gcc
          CXX: mipsel-linux-gnu-g++
          RUST_TARGET: mipsel-unknown-linux-gnu
          # 针对 MIPSLE 架构的特定编译选项
          CFLAGS: "-mips32 -EL -msoft-float"
          CXXFLAGS: "-mips32 -EL -msoft-float"
        run: |
          # 构建主程序
          make

          # 构建自测试程序（可选）
          make selftest

          # 验证二进制文件架构
          file zerotier-one

      - name: Package binary
        run: |
          mkdir -p release
          cp zerotier-one release/
          cp zerotier-selftest release/  # 可选
          cp LICENSE.txt release/
          tar -czvf zerotier-one-mipsle-${{ steps.vars.outputs.ZT_VERSION }}.tar.gz -C release .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: zerotier-one-mipsle-${{ steps.vars.outputs.ZT_VERSION }}.tar.gz
          name: Release ${{ steps.vars.outputs.ZT_VERSION }} (MIPSLE)
          body: |
            ZeroTierOne binary for MIPSLE architecture.
            - Commit: ${{ steps.vars.outputs.ZT_COMMIT }}
            - Built from tag: ${{ steps.vars.outputs.ZT_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}