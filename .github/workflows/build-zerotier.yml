name: Build ZeroTierOne

on:
  workflow_dispatch:
    inputs:
      ZT_VERSION:
        description: '选择 ZeroTier 版本'
        required: true
        default: '1.16.0'
        type: choice
        options:
          - '1.16.0'
          - '1.14.2'
          - '1.14.1'
          - '1.14.0'
          - '1.12.2'
          - '1.12.1'
          - '1.12.0'
          - '1.10.6'
          - '1.10.5'
          - '1.10.4'
      ARCH:
        description: '选择目标架构'
        required: true
        default: 'mipsel'
        type: choice
        options:
          - 'mipsel'
          - 'arm'
          - 'x86_64'

jobs:
  build:
    name: Build ZeroTierOne Binary
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install cross toolchain
        run: |
          sudo apt-get update
          if [ "${{ github.event.inputs.ARCH }}" = "mipsel" ]; then
            sudo apt-get install -y gcc-mipsel-linux-gnu g++-mipsel-linux-gnu
            echo "TOOLCHAIN_PREFIX=mipsel-linux-gnu" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.ARCH }}" = "arm" ]; then
            sudo apt-get install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf
            echo "TOOLCHAIN_PREFIX=arm-linux-gnueabihf" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.ARCH }}" = "x86_64" ]; then
            sudo apt-get install -y gcc-x86-64-linux-gnu g++-x86-64-linux-gnu
            echo "TOOLCHAIN_PREFIX=x86_64-linux-gnu" >> $GITHUB_ENV
          else
            echo "Unsupported ARCH"
            exit 1
          fi

      - name: Download ZeroTier source
        run: |
          curl -LO https://github.com/zerotier/ZeroTierOne/archive/refs/tags/${{ github.event.inputs.ZT_VERSION }}.tar.gz
          tar -xzf ${{ github.event.inputs.ZT_VERSION }}.tar.gz

      - name: Build ZeroTier
        run: |
          DIR=$PWD/ZeroTierOne-${{ github.event.inputs.ZT_VERSION }}
          cd $DIR
          export CC=${TOOLCHAIN_PREFIX}-gcc
          export CXX=${TOOLCHAIN_PREFIX}-g++
          export AR=${TOOLCHAIN_PREFIX}-ar
          export RANLIB=${TOOLCHAIN_PREFIX}-ranlib
          export CFLAGS="-O2 -fno-strict-aliasing"
          export CXXFLAGS="-O2 -fno-strict-aliasing -std=c++17"

          make OSTYPE=Linux

      - name: Package binary
        run: |
          mkdir -p release
          cp $PWD/ZeroTierOne-${{ github.event.inputs.ZT_VERSION }}/zerotier-one release/
          tar -czf zerotier-one-${{ github.event.inputs.ZT_VERSION }}-${{ github.event.inputs.ARCH }}.tar.gz -C release zerotier-one

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.ZT_VERSION }}
          name: ZeroTierOne-${{ github.event.inputs.ZT_VERSION }}-${{ github.event.inputs.ARCH }}
          body: "ZeroTierOne ${{ github.event.inputs.ZT_VERSION }} binary for ${{ github.event.inputs.ARCH }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: zerotier-one-${{ github.event.inputs.ZT_VERSION }}-${{ github.event.inputs.ARCH }}
          path: zerotier-one-${{ github.event.inputs.ZT_VERSION }}-${{ github.event.inputs.ARCH }}.tar.gz
