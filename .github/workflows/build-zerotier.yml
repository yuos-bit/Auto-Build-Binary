name: Build ZeroTierOne for MIPSLE

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'ZeroTierOne release tag (e.g. 1.16.0)'
        required: false
        default: ''

jobs:
  build-mipsle:
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget tar jq

      - name: Determine ZeroTierOne version
        id: get_version
        run: |
          if [ -z "${{ github.event.inputs.tag }}" ]; then
            TAG=$(curl -s https://api.github.com/repos/zerotier/ZeroTierOne/tags | \
              jq -r '.[0].name')
          else
            TAG="${{ github.event.inputs.tag }}"
          fi
          echo "Using ZeroTierOne version: $TAG"
          echo "ZT_VERSION=$TAG" >> $GITHUB_OUTPUT

      - name: Clean previous build
        run: |
          rm -rf ZeroTierOne-* zerotier-one-mipsle-*.tar.gz

      - name: Download and extract ZeroTierOne
        run: |
          echo "Downloading ZeroTierOne source..."
          wget -q https://github.com/zerotier/ZeroTierOne/archive/refs/tags/${{ steps.get_version.outputs.ZT_VERSION }}.tar.gz
          echo "Extracting..."
          tar -xzf ${{ steps.get_version.outputs.ZT_VERSION }}.tar.gz
          ls -l ZeroTierOne-${{ steps.get_version.outputs.ZT_VERSION }}

      - name: Cross-compile ZeroTierOne in Docker
        run: |
          DIR="$GITHUB_WORKSPACE/ZeroTierOne-${{ steps.get_version.outputs.ZT_VERSION }}"
          echo "Checking Docker container and source directory..."
          docker run --rm \
            -v $DIR:/work:rw \
            -w /work \
            rustreleaser/cross:mipsel-unknown-linux-musl \
            bash -c "\
              echo 'Listing files in /work:' && ls -l && \
              echo 'Checking cross-compiler...' && which mipsel-linux-muslsf-gcc && \
              export ZT_SKIP_RUST=1 && \
              export CC=mipsel-linux-muslsf-gcc && \
              export CXX=mipsel-linux-muslsf-g++ && \
              export AR=mipsel-linux-muslsf-ar && \
              export RANLIB=mipsel-linux-muslsf-ranlib && \
              make OSTYPE=Linux || { echo 'Make failed'; exit 1; }"

      - name: Verify build
        run: |
          DIR="ZeroTierOne-${{ steps.get_version.outputs.ZT_VERSION }}"
          if [ ! -f "$DIR/zerotier-one" ]; then
            echo "Error: zerotier-one binary not found!"
            exit 1
          fi
          echo "Build succeeded. Binary located at $DIR/zerotier-one"

      - name: Package binary
        run: |
          DIR="ZeroTierOne-${{ steps.get_version.outputs.ZT_VERSION }}"
          cd $DIR
          mkdir -p release
          cp zerotier-one release/
          cp LICENSE.txt release/
          tar -czvf ../zerotier-one-mipsle-${{ steps.get_version.outputs.ZT_VERSION }}.tar.gz -C release .

      - name: Upload Release
        uses: softprops/action-gh-release@v2
        with:
          files: zerotier-one-mipsle-${{ steps.get_version.outputs.ZT_VERSION }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
