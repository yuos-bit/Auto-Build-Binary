name: Build ZeroTier for Multiple Architectures

on:
  push:
    tags:
      - 'v*'  # 当推送类似v1.2.3的标签时触发
  workflow_dispatch:  # 允许手动触发
    inputs:
      zt_version:
        description: 'ZeroTier One版本号 (例如: 1.16.0)'
        required: true
        default: '1.16.0'

jobs:
  build:
    name: Build for ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: amd64
            docker_image: ubuntu:20.04
            cross_prefix: ""
            target: x86_64-linux-gnu
            rust_target: x86_64-unknown-linux-gnu
            qemu_arch: x86_64
          - arch: arm64
            docker_image: arm64v8/ubuntu:20.04
            cross_prefix: aarch64-linux-gnu-
            target: aarch64-linux-gnu
            rust_target: aarch64-unknown-linux-gnu
            qemu_arch: aarch64
          - arch: armhf
            docker_image: arm32v7/ubuntu:20.04
            cross_prefix: arm-linux-gnueabihf-
            target: arm-linux-gnueabihf
            rust_target: armv7-unknown-linux-gnueabihf
            qemu_arch: arm
          - arch: mipsel
            docker_image: arm64v8/ubuntu:20.04
            cross_prefix: mipsel-linux-gnu-
            target: mipsel-linux-gnu
            rust_target: mipsel-unknown-linux-gnu
            qemu_arch: mipsel
          - arch: mips
            docker_image: arm64v8/ubuntu:20.04
            cross_prefix: mips-linux-gnu-
            target: mips-linux-gnu
            rust_target: mips-unknown-linux-gnu
            qemu_arch: mips

    steps:
      - name: Checkout specific version
        run: |
          VERSION=${{ github.event.inputs.zt_version || github.ref_name }}
          VERSION=${VERSION#v}
          git clone --depth 1 --branch $VERSION https://github.com/zerotier/ZeroTierOne.git .

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install QEMU for multi-architecture support
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static binfmt-support
          docker run --rm --privileged tonistiigi/binfmt --install all

      - name: Build and extract ZeroTier binaries
        run: |
          VERSION=${{ github.event.inputs.zt_version || github.ref_name }}
          VERSION=${VERSION#v}
          mkdir -p build-output/${{ matrix.arch }}
          
          # 复制qemu静态二进制文件到当前目录（用于容器内执行）
          if [ "${{ matrix.qemu_arch }}" != "x86_64" ]; then
            sudo cp /usr/bin/qemu-${{ matrix.qemu_arch }}-static .
          fi
          
          docker run --rm -v $PWD:/workspace -w /workspace ${{ matrix.docker_image }} /bin/bash -c "
            # 安装依赖
            apt-get update && apt-get install -y \
              build-essential \
              git \
              make \
              gcc \
              g++ \
              libc6-dev \
              libssl-dev \
              pkg-config \
              curl \
              binutils \
              ${{ matrix.cross_prefix }}gcc \
              ${{ matrix.cross_prefix }}g++ \
              ${{ matrix.cross_prefix }}libc6-dev \
              ${{ matrix.cross_prefix }}openssl \
              ${{ matrix.cross_prefix }}pkg-config
            
            # 安装Rust
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
            source \$HOME/.cargo/env
            rustup target add ${{ matrix.rust_target }}
            
            # 编译ZeroTier
            make CC=${{ matrix.cross_prefix }}gcc CXX=${{ matrix.cross_prefix }}g++
            
            # 运行自测试
            make selftest
            ./zerotier-selftest
            
            # 复制编译产物
            cp zerotier-one /workspace/build-output/${{ matrix.arch }}/
            cp zerotier-cli /workspace/build-output/${{ matrix.arch }}/
            cp zerotier-idtool /workspace/build-output/${{ matrix.arch }}/
          "

      - name: Create tarball
        run: |
          VERSION=${{ github.event.inputs.zt_version || github.ref_name }}
          VERSION=${VERSION#v}
          cd build-output/${{ matrix.arch }}
          tar -czf ../../zerotier-${VERSION}-linux-${{ matrix.arch }}.tar.gz *
          cd ../..

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zerotier-${{ matrix.arch }}
          path: zerotier-*.tar.gz
          retention-days: 7

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/zerotier-amd64/zerotier-*.tar.gz
            artifacts/zerotier-arm64/zerotier-*.tar.gz
            artifacts/zerotier-armhf/zerotier-*.tar.gz
            artifacts/zerotier-mipsel/zerotier-*.tar.gz
            artifacts/zerotier-mips/zerotier-*.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}